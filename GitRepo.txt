=========This is the begining of our crreating new Git Repo=========
-git init =this line of code should be carefully used. Run it only on a subfoldr or directory you want your git files to be and which can be removed or recreated 
-git status= shows if there is new changes to our git repo
-git add [FileName] or [.](dot tells the command to add all changes without specifying filename)= adds the new change made to our git repo
-git commit [FileName]= commits/saves the changes that werein staged status.
-git status --staged = this command shows you changes that were added (staged) but not really commited
-git log
-git log --oneline
-git checkout main or my_branch or any other branch you create
**git_checkout [BranchName] switches from current branch to the specified branch
----------------------------------
-git add .
-git commit -m "This is a change made to our git file"
---------------
Checking the differences or last-known state of our file/repo
-git diff
-git checkout HEAD~1 [FileName] e.g git checkout HEAD~1 README.md
-git status --staged
-git reset HEAD README.md =this command unstages uncommited or staged changes
-git reset --hard
-push --set-upstream origin my_branch
-
======How to Create a branch. Switch to Different Branches=========
-git branch collab_branch: Creates branch "collab_branch"
-git checkout collab_branch "Makes collab_branch as the current active branch"
-git branch -a: "Shows all available branches with *[branchName] being active one in use
-git branch -d collab_branch: This command deletes the Branch specified
-git log --oneline --graph --decorate --all: gives nicer logs
-git merge [branch you want changes to reflect] e.g git merge main or git merge my_branch
-git fetch --prune: the fetch fetches every changes made in the git web and the prune tells it to remove any branch that is not also available locally.
-git branch -D: forces a deletion of a branch

 
